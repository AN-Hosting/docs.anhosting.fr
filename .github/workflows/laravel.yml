name: Documentation

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, libxml
        coverage: xdebug

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Production
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
          cd ${{ secrets.REMOTE_PATH }} && \
          git config --global --add safe.directory ${{ secrets.REMOTE_PATH }} && \
          sudo chown -R ${{ secrets.SSH_USER }}:${{ secrets.SSH_USER }} . && \
          sudo apt-get update && \
          sudo apt-get install -y php8.2-sqlite3 && \
          git pull origin main && \
          composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev && \
          npm ci && \
          npm run build && \
          mkdir -p database && \
          touch database/database.sqlite && \
          chmod -R 775 database && \
          chmod 775 database/database.sqlite && \
          php artisan migrate --force && \
          php artisan optimize:clear && \
          php artisan optimize && \
          php artisan view:cache && \
          php artisan config:cache && \
          php artisan route:cache && \
          sudo systemctl restart php8.2-fpm
        '
