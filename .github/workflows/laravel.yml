name: Documentation

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, libxml
        coverage: xdebug

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Production
      env:
        DEPLOY_PATH: /var/www/docs.anhosting.fr
        DEPLOY_USER: ${{ secrets.SSH_USER }}
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
          # Vérification et installation des dépendances
          if ! dpkg -l | grep -q "php8.2-sqlite3"; then
            sudo apt-get update
            sudo apt-get install -y php8.2-sqlite3
          fi

          # Préparation du déploiement
          cd /var/www/docs.anhosting.fr
          
          # Backup de la base de données
          if [ -f "database/database.sqlite" ]; then
            cp database/database.sqlite database/database.sqlite.backup
          fi

          # Configuration Git
          git config --global --add safe.directory /var/www/docs.anhosting.fr
          
          # Pull des changements
          git pull origin main
          
          # Installation des dépendances PHP
          composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
          
          # Installation et build des assets
          npm ci
          npm run build
          
          # Gestion des permissions
          sudo chown -R www-data:www-data .
          sudo find . -type f -exec chmod 644 {} \;
          sudo find . -type d -exec chmod 755 {} \;
          
          # Permissions spéciales pour les dossiers qui nécessitent lécriture
          sudo chmod -R 775 storage bootstrap/cache database
          sudo chown -R $USER:www-data storage bootstrap/cache database
          
          # Création/Permissions base de données SQLite
          if [ ! -f "database/database.sqlite" ]; then
            touch database/database.sqlite
          fi
          sudo chmod 775 database/database.sqlite
          sudo chown $USER:www-data database/database.sqlite
          
          # Optimisations Laravel
          php artisan migrate --force
          php artisan optimize:clear
          php artisan optimize
          php artisan view:cache
          php artisan config:cache
          php artisan route:cache
          
          # Redémarrage des services
          sudo systemctl reload php8.2-fpm
          sudo systemctl reload nginx
          
          echo "Déploiement terminé avec succès!"
        '
